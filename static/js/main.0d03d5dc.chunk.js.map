{"version":3,"sources":["components/AddCategory.js","components/GifItemGrid.js","services/index.js","components/GifGrid.js","hooks/useFetchGifs.js","App.js","index.js"],"names":["AddCategory","addCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","id","Date","getMilliseconds","name","type","placeholder","value","onChange","target","GrifItemGrid","img","title","className","src","alt","getGifs","category","a","url","fetch","response","json","data","gifs","map","gif","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","App","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"iMAEaA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAmB9C,OACE,0BAAMC,SAba,SAACC,GACpBA,EAAEC,iBAC+B,IAA7BJ,EAAWK,OAAOC,SAGtBR,EAAY,CACVS,IAAI,IAAIC,MAAOC,kBACfC,KAAMV,IAERC,EAAc,OAKZ,2BACEU,KAAK,OACLC,YAAY,iBACZC,MAAOb,EACPc,SAtBmB,SAACX,GACxBF,EAAcE,EAAEY,OAAOF,YCJdG,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,MAAR,OAC1B,yBAAKC,UAAU,eACb,yBAAKA,UAAU,mBAAmBC,IAAKH,EAAKI,IAAKH,IACjD,yBAAKC,UAAU,qBACb,4BAAKD,M,uBCNEI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,mGACmFF,GADnF,SAEEG,MAAMD,GAFR,cAEfE,EAFe,gBAGEA,EAASC,OAHX,uBAGbC,EAHa,EAGbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAD,MAAU,CAC9BzB,GAAIyB,EAAIzB,GACRW,MAAOc,EAAId,MACXD,IAAKe,EAAIC,OAAOC,iBAAiBT,QAPd,kBASdK,GATc,4CAAH,sDCIPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECD1B,SAACA,GAAc,IAAD,EACDxB,mBAAS,CACjC+B,KAAM,GACNM,SAAS,IAHgB,mBACpBC,EADoB,KACbC,EADa,KAU3B,OALAC,qBAAU,WACRjB,EAAQC,GAAUiB,MAAK,SAACV,GACtBQ,EAAS,CAAER,OAAMM,SAAS,SAE3B,CAACb,IACGc,EDRmBI,CAAalB,GAA/BO,EAD+B,EAC/BA,KAAMM,EADyB,EACzBA,QACd,OACE,oCACE,4BAAKb,GACJa,GAAW,0CACZ,yBAAKjB,UAAU,WACZW,EAAKC,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,eAAcU,IAAKV,EAAIzB,IAAQyB,UEW1BW,MAnBf,WAAgB,IAAD,EACuB5C,mBAAS,IADhC,mBACN6C,EADM,KACMC,EADN,KAOb,OACE,yBAAK1B,UAAU,OACb,wCACA,kBAAC,EAAD,CAAarB,YAPG,SAACyB,GACnBsB,EAAc,CAACtB,GAAF,mBAAeqB,QAO1B,6BACCA,EAAWb,KAAI,SAACR,GAAD,OACd,kBAAC,EAAD,CAASmB,IAAKnB,EAAShB,GAAIgB,SAAUA,EAASb,YCZtDoC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.0d03d5dc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nexport const AddCategory = ({ addCategory }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputValue = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length === 0) {\r\n      return;\r\n    }\r\n    addCategory({\r\n      id: new Date().getMilliseconds(),\r\n      name: inputValue,\r\n    });\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Buscar gifs...\"\r\n        value={inputValue}\r\n        onChange={handleInputValue}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  addCategory: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GrifItemGrid = ({ img, title }) => (\r\n  <div className=\"GifItemCard\">\r\n    <img className=\"GifItemCard__img\" src={img} alt={title} />\r\n    <div className=\"GifItemCard__body\">\r\n      <h4>{title}</h4>\r\n    </div>\r\n  </div>\r\n);\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?limit=12&api_key=TaIigXIQdN8kSXyAgNSgwC5lqAloVnM6&q=${category}`;\r\n  const response = await fetch(url);\r\n  const { data } = await response.json();\r\n  const gifs = data.map((gif) => ({\r\n    id: gif.id,\r\n    title: gif.title,\r\n    img: gif.images.downsized_medium.url,\r\n  }));\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\nimport { GrifItemGrid } from \"./GifItemGrid\";\r\nimport useFetchGifs from \"../hooks/useFetchGifs\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { gifs, loading } = useFetchGifs(category);\r\n  return (\r\n    <>\r\n      <h2>{category}</h2>\r\n      {loading && <h4>Loading...</h4>}\r\n      <div className=\"GifGrid\">\r\n        {gifs.map((gif) => (\r\n          <GrifItemGrid key={gif.id} {...gif} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../services\";\r\n\r\nexport default (category) => {\r\n  const [state, setState] = useState({\r\n    gifs: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n    getGifs(category).then((gifs) => {\r\n      setState({ gifs, loading: false });\r\n    });\r\n  }, [category]);\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nfunction App() {\n  const [categories, setCategories] = useState([]);\n\n  const addCategory = (category) => {\n    setCategories([category, ...categories]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h2>Gifs App</h2>\n      <AddCategory addCategory={addCategory} />\n      <hr />\n      {categories.map((category) => (\n        <GifGrid key={category.id} category={category.name} />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}